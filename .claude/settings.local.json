{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(powershell:*)",
      "Bash(cargo tauri:*)",
      "Bash(cargo install:*)",
      "Bash(node:*)",
      "Bash(npm --version)",
      "Bash(npm install)",
      "Bash(claude doctor)",
      "mcp__serena__*",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__activate_project",
      "mcp__serena__read_memory",
      "mcp__serena__list_dir",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__replace_symbol_body",
      "Bash(npm run dev:*)",
      "mcp__serena__replace_regex",
      "Bash(rm:*)",
      "Bash(tasklist:*)",
      "Bash(/bashes)",
      "Bash(npm run tauri:*)",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__list_memories",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(npx tsc:*)",
      "Bash(taskkill:*)",
      "mcp__serena__write_memory",
      "Bash(cargo check:*)",
      "Bash(VITE_PORT=5174 npm run tauri dev)",
      "mcp__serena__search_for_pattern",
      "Bash(sed:*)",
      "Bash(npm run build:*)",
      "Bash(npx eslint:*)",
      "Bash(cargo --version)",
      "Bash(cargo clean:*)",
      "Bash(npm install:*)",
      "Bash(find:*)",
      "Bash(cargo:*)",
      "Bash(grep:*)",
      "Bash(dir:*)",
      "Bash(npm test)",
      "Bash(timeout:*)",
      "Bash(cmd /c:*)",
      "Bash(set VITE_PORT=5174)",
      "Bash(scriptsdev.bat status)",
      "Bash(scripts/dev.bat status)",
      "Bash(scriptsdev.bat stop)",
      "Bash(scripts/dev.bat:*)",
      "Bash(mv:*)",
      "Bash(echo $APPDATA)",
      "Bash(scriptsdev.bat restart)",
      "Bash(sqlite3:*)",
      "Bash(cp:*)",
      "Bash(del \"%APPDATA%\\com.tasknag.app\\tasknag.db\")",
      "Bash(npm run test:*)",
      "Bash(npm run:*)",
      "Bash(curl:*)",
      "Bash(ollama list:*)",
      "Bash(git checkout:*)",
      "mcp__serena__find_file",
      "Bash(refreshenv)",
      "Bash(gh:*)",
      "Bash(export:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits"
  }
}